<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2018-04-20 at 06:36:44.
 */

if ( ! class_exists( 'WP_Nonce' ) ) {
	require_once( __DIR__ . "/../src/class-WP-Nonces.php" );
}
use WpNonces\WP_Nonce;



class WP_NonceTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var my_nonce
     */
    protected $my_nonce;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->my_nonce = new WP_Nonce;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        //
    }

    /**
     * @covers WpNonces\WP_Nonce::__constructor
     */
    public function test__constructor() {
        $create_nonce = new WP_Nonce( "test-nonce" );
        return $this->assertInstanceOf( 'WP_Nonce', $create_nonce, 'Class not instanced properly' );
    }

    /**
     * @covers WpNonces\WP_Nonce::get_action
     */
    public function testGet_action() {
        $this->assertNotEmpty( $this->my_nonce->get_action() );
    }

    /**
     * @covers WpNonces\WP_Nonce::set_action
     */
    public function testSet_action() {
        $this->my_nonce->set_action(-1);
        $this->assertNotEmpty( $this->my_nonce->get_action() );
    }

    /**
     * @covers WpNonces\WP_Nonce::get_nonce_name
     */
    public function testGet_nonce_name() {
        $this->assertNotEmpty( $this->my_nonce->get_nonce_name() );
    }

    /**
     * @covers WpNonces\WP_Nonce::set_nonce_name
     */
    public function testSet_nonce_name() {
        $this->my_nonce->set_nonce_name('_wpnonce');
        $this->assertSame( '_wpnonce', $this->my_nonce->get_nonce_name() );
    }

    /**
     * @covers WpNonces\WP_Nonce::create_nonce
     */
    public function testCreate_nonce() {
        $test_nonce = $this->my_nonce->create_nonce();
        $this->assertTrue( is_string($test_nonce) );
    }

    /**
     * @covers WpNonces\WP_Nonce::nonce_to_url
     */
    public function testNonce_to_url() {
        $test_nonce = $this->my_nonce->create_nonce();
        $test_url = 'http://my-wp-site.com';
        $test_value = $this->my_nonce->nonce_to_url( $test_url, -1, '_wpnonce');
        return $this->assertEquals( $test_url.'?_wpnonce='.$test_nonce, $test_value, 'Wrong nonce url' );
    }

    /**
     * @covers WpNonces\WP_Nonce::nonce_to_field
     */
    public function testNonce_to_field() {
        $nonce_field = $this->my_nonce->nonce_to_field( -1, '_wpnonce', true, false );
	$this->assertNotNull( $nonce_field );
    }

    /**
     * @covers WpNonces\WP_Nonce::nonce_ays
     */
    public function testNonce_ays() {
        $this->my_nonce->nonce_ays();
        $message = ob_get_clean();
        $this->assertNotNull( $message );
    }

    /**
     * @covers WpNonces\WP_Nonce::verify_nonce
     */
    public function testVerify_nonce() {
        $nonce = $this->my_nonce->create_nonce();
        $verify_nonce_response = $this->my_nonce->verify_nonce($nonce);
        $this->assertNotNull( $verify_nonce_response );
    }

    /**
     * @covers WpNonces\WP_Nonce::check_admin_referer
     */
    public function testCheck_admin_referer() {
        $nonce = $this->my_nonce->create_nonce();
	$_REQUEST['_wpnonce'] = $nonce;
        $this->assertNotNull( $this->my_nonce->check_admin_referer() );
    }

    /**
     * @covers WpNonces\WP_Nonce::check_ajax_referer
     */
    public function testCheck_ajax_referer() {
        $nonce = $this->my_nonce->create_nonce();
	$_REQUEST['_wpnonce'] = $nonce;
        $this->assertNotNull( $this->my_nonce->check_ajax_referer() );
    }

}